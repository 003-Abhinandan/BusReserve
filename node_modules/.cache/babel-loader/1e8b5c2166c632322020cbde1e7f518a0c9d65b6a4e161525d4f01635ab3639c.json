{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhin\\\\Desktop\\\\project\\\\src\\\\components\\\\AdminLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Admin from './Admin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  const [adminId, setAdminId] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [error, setError] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!adminId || !password) {\n      setError(\"Both Admin ID and Password are required\");\n      return;\n    }\n    if (adminId === \"Admin_01\" && password === \"Admin\") {\n      return /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n    } else {\n      alert(\"Invalid Admin ID or Password\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"adminId\",\n        children: \"Admin ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"adminId\",\n        value: adminId,\n        onChange: e => setAdminId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminLogin, \"U2xv+3Fen9/rBZ/s723ahFVxArQ=\");\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","Admin","AdminLogin","adminId","setAdminId","password","setPassword","error","setError","handleSubmit","e","preventDefault","alert","target","value"],"sources":["C:/Users/abhin/Desktop/project/src/components/AdminLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Admin from './Admin';\r\n\r\nconst AdminLogin = () => {\r\n  const [adminId, setAdminId] = useState(null);\r\n  const [password, setPassword] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!adminId || !password) {\r\n      setError(\"Both Admin ID and Password are required\");\r\n      return;\r\n    }\r\n\r\n    if (adminId === \"Admin_01\" && password === \"Admin\") {\r\n      return <Admin/>;\r\n    } else {\r\n      alert(\"Invalid Admin ID or Password\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"adminId\">Admin ID:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"adminId\"\r\n          value={adminId}\r\n          onChange={(e) => setAdminId(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AdminLogin;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;AAAC;AAE5B,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI,CAACR,OAAO,IAAI,CAACE,QAAQ,EAAE;MACzBG,QAAQ,CAAC,yCAAyC,CAAC;MACnD;IACF;IAEA,IAAIL,OAAO,KAAK,UAAU,IAAIE,QAAQ,KAAK,OAAO,EAAE;MAClD,oBAAO,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA,QAAE;IACjB,CAAC,MAAM;MACLO,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEH,YAAa;IAAA,wBAC3B;MAAA,wBACE;QAAO,OAAO,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAC1C;QACE,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,SAAS;QACZ,KAAK,EAAEN,OAAQ;QACf,QAAQ,EAAGO,CAAC,IAAKN,UAAU,CAACM,CAAC,CAACG,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC5C;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAA,wBACE;QAAO,OAAO,EAAC,UAAU;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAC3C;QACE,IAAI,EAAC,UAAU;QACf,EAAE,EAAC,UAAU;QACb,KAAK,EAAET,QAAS;QAChB,QAAQ,EAAGK,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACG,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC7C;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,EACLP,KAAK,iBAAI;MAAK,SAAS,EAAC,OAAO;MAAA,UAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,eAC9C;MAAQ,IAAI,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB;EAAA;IAAA;IAAA;IAAA;EAAA,QAChC;AAEX,CAAC;AAAC,GA3CIL,UAAU;AAAA,KAAVA,UAAU;AA6ChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}